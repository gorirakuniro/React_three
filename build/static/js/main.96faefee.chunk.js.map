{"version":3,"sources":["App.js","index.js"],"names":["softShadows","SpinningMesh","position","args","color","speed","mesh","useRef","useFrame","current","rotation","x","y","useState","expand","setExpand","hovered","setHover","props","useSpring","scale","onClick","castShadow","ref","onPointerOver","e","onPointerOut","attach","factor","CircleMesh","App","shadowMap","colorManagement","camera","fov","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","receiveShadow","Math","PI","opacity","colors","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96faefee.chunk.js","sourcesContent":["import React, { useRef, useState  } from 'react';\nimport './App.scss'\n\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { softShadows, MeshWobbleMaterial, OrbitControls } from 'drei';\n\nimport { useSpring, a } from 'react-spring/three';\n\n\nsoftShadows();\n\nconst SpinningMesh = ({ position, args, color, speed }) => {\n  const mesh = useRef(null)\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  //\n  const [expand, setExpand] = useState(false)\n  const [hovered, setHover] = useState(false)\n\n  const props = useSpring({\n    scale: expand ? [2.4, 2.4, 2.4] : [1, 1, 1],\n  })\n\n  return (\n    <a.mesh\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow\n      position={position}\n      ref={mesh}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n      >\n      <boxBufferGeometry attach='geometry' args={args} />\n      <MeshWobbleMaterial\n        attach='material'\n        color={hovered ? 'hotpink' : color}\n        speed={speed}\n        factor={0.6}\n      />\n    </a.mesh>\n  )\n}\n\n\nconst CircleMesh = ({ position, args, color, speed }) => {\n  const mesh = useRef(null)\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.03))\n\n  //\n  const [expand, setExpand] = useState(false)\n  const [hovered, setHover] = useState(false)\n\n  const props = useSpring({\n    scale: expand ? [5.4, 5.4, 5.4] : [1, 1, 1],\n  })\n\n  return (\n    <a.mesh\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow\n      position={position}\n      ref={mesh}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n      >\n      <octahedronBufferGeometry attach='geometry' args={args} />\n      <MeshWobbleMaterial\n        attach='material'\n        color={hovered ? 'hotpink' : color}\n        speed={speed}\n        factor={0.6}\n      />\n    </a.mesh>\n  )\n}\n\n\n\nfunction App() {\n  return (\n    <>\n      <Canvas\n        shadowMap\n        colorManagement\n        camera={{ position: [-5, 2, 10], fov: 60 }}>\n        <ambientLight intensity={0.3} />\n        <directionalLight\n          castShadow\n          position={[0, 10, 0]}\n          intensity={1.5}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={50}\n          shadow-camera-left={-10}\n          shadow-camera-right={10}\n          shadow-camera-top={10}\n          shadow-camera-bottom={-10}\n        />\n        <pointLight position={[-10, 100, -20]} intensity={0.5} />\n        <pointLight position={[0, 0, -20]} intensity={1.5} />\n\n        <group>\n          <mesh\n            receiveShadow\n            rotation={[-Math.PI / 2, 0, 0]}\n            position={[0, -3, 0]}\n          >\n            <planeBufferGeometry attach='geometry' args={[100, 100]} />\n            <shadowMaterial attach='material' opacity={0.3} />\n          </mesh>\n          <SpinningMesh\n            position={[0, 1, 0]}\n            args={[3, 2, 1]}\n            color='#af8baf'\n            speed={2}\n          />\n          <SpinningMesh position={[-2, 1, -5]} color='#584153' speed={6} />\n          <SpinningMesh position={[5, 1, -2]} color='#584153' speed={6} />\n\n          <CircleMesh position={[2, 1, 2]} colors='#b83b5e' speed={20} />\n          <CircleMesh position={[6, 1, 2]} colors='#f69e7b' speed={20} />\n\n\n        </group>\n\n        <OrbitControls />\n      </Canvas>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}